/* 
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Other/SQLTemplate.sql to edit this template
 */
/**
 * Author:  p_a_u
 * Created: 4 sept 2024
 */
-- Crear base de datos
CREATE DATABASE EVENTODB;
GO

USE EVENTODB;
GO

-- Crear tabla PERSONAL
CREATE TABLE PERSONAL (
    NOMBRE_USUARIO NVARCHAR(50) PRIMARY KEY,
    CONTRASEÑA NVARCHAR(255) NOT NULL,
    RANGO INT NOT NULL,
    ESTADO NVARCHAR(50) NOT NULL
);
GO

-- Crear tabla CLIENTE
CREATE TABLE CLIENTE (
    ID_CLIENTE INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE NVARCHAR(100) NOT NULL,
    APELLIDOS NVARCHAR(100) NOT NULL,
    DIRECCION NVARCHAR(255),
    CORREO NVARCHAR(100),
    CEL_CLIENTE NVARCHAR(20),
    DESCRIPCION NVARCHAR(255)
);
GO

-- Crear tabla PROYECTO
CREATE TABLE PROYECTO (
    ID_PROYECTO INT PRIMARY KEY IDENTITY(1,1),
    ID_CLIENTE INT,
    FECHA_INICIO DATE,
    FECHA_FIN DATE,
    ESTADO NVARCHAR(50),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);
GO

-- Crear tabla DET_PROYECTOS
CREATE TABLE DET_PROYECTOS (
    ID_DET INT PRIMARY KEY IDENTITY(1,1),
    ID_PROYECTO INT,
    NOMBRE NVARCHAR(100),
    CIUDAD NVARCHAR(100),
    PRESUPUESTO DECIMAL(18,2),
    NUMERO_INVITADOS INT,
    ID_TIPOEVENTO INT,
    LUGAR NVARCHAR(255),
    HORA_EVENTO TIME,
    DIRECCION_SALON NVARCHAR(255),
    FOREIGN KEY (ID_PROYECTO) REFERENCES PROYECTO(ID_PROYECTO)
);
GO

-- Crear tabla Tipo Evento
CREATE TABLE TipoEvento (
    ID_TIPOEVENTO INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE NVARCHAR(100)
);
GO

-- Crear tabla COTIZACION
CREATE TABLE COTIZACION (
    ID_COTIZACION INT PRIMARY KEY IDENTITY(1,1),
    ID_PROYECTO INT,
    SUBTOTAL DECIMAL(18,2),
    TOTAL DECIMAL(18,2),
    FECHA DATE,
    FOREIGN KEY (ID_PROYECTO) REFERENCES PROYECTO(ID_PROYECTO)
);
GO

-- Crear tabla PAGOS
CREATE TABLE PAGOS (
    ID_PAGOS INT PRIMARY KEY IDENTITY(1,1),
    ID_COTIZACION INT,
    FECHA DATE,
    MONTO DECIMAL(18,2),
    RESTANTE DECIMAL(18,2),
    FOREIGN KEY (ID_COTIZACION) REFERENCES COTIZACION(ID_COTIZACION)
);
GO

-- Crear tabla SERVICIOS
CREATE TABLE SERVICIOS (
    COD_SERVICIO INT PRIMARY KEY IDENTITY(1,1),
    CONCEPTO NVARCHAR(100),
    PRECIO_UNITARIO DECIMAL(18,2),
    TIPO_SERVICIO INT,
    PROVEEDOR NVARCHAR(100)
);
GO

-- Crear tabla COTIZACION_SERVICIOS
CREATE TABLE COTIZACION_SERVICIOS (
    ID_COTIZACION INT,
    COD_SERVICIO INT,
    CANTIDAD INT,
    IMPORTE DECIMAL(18,2),
    FOREIGN KEY (ID_COTIZACION) REFERENCES COTIZACION(ID_COTIZACION),
    FOREIGN KEY (COD_SERVICIO) REFERENCES SERVICIOS(COD_SERVICIO)
);
GO

-- Crear tabla TIPOSERVICIO
CREATE TABLE TIPOSERVICIO (
    ID_TIPO INT PRIMARY KEY IDENTITY(1,1),
    NOMBRE NVARCHAR(100)
);
GO

--USE EventoDB; -- Asegúrate de usar la base de datos correcta
--GO

--SELECT name AS TABLE_NAME 
--FROM sys.tables;
--GO
/*INSERT INTO PERSONAL (NOMBRE_USUARIO, CONTRASEÑA, RANGO, ESTADO)
VALUES ('jdoe', 'password123', 'Administrador', 'Activo');
GO*/
/*
INSERT INTO PROYECTO (ID_CLIENTE, FECHA_INICIO, FECHA_FIN, ESTADO) VALUES (?, ?, ?, ?);
*/
/*
CREATE PROCEDURE sp_obtn_presupuesto
    @IDCOT INT
AS
BEGIN
    SELECT PRESUPUESTO 
    FROM COTIZACION
    WHERE ID_COTIZACION = @IDCOT;
END;
GO
*/
/*
CREATE PROCEDURE sp_eliminar_ser_cot
    @IDCOT INT,
    @CONCEPTO NVARCHAR(100)
AS
BEGIN
    DELETE FROM COTIZACION_SERVICIOS
    WHERE ID_COTIZACION = @IDCOT
      AND COD_SERVICIO = (SELECT COD_SERVICIO FROM SERVICIOS WHERE CONCEPTO = @CONCEPTO);
END;
GO
*/
/*
CREATE PROCEDURE sp_cot_ser
    @IDCOT INT,
    @CODSERVICIO INT,
    @CANTIDAD INT
AS
BEGIN
    INSERT INTO COTIZACION_SERVICIOS (ID_COTIZACION, COD_SERVICIO, CANTIDAD, IMPORTE)
    VALUES (@IDCOT, @CODSERVICIO, @CANTIDAD, 
            (SELECT PRECIO_UNITARIO * @CANTIDAD FROM SERVICIOS WHERE COD_SERVICIO = @CODSERVICIO));
END;
GO
*/
/*
CREATE PROCEDURE sp_obtn_montos
    @IDCOT INT
AS
BEGIN
    SELECT 
        SUM(CANTIDAD * PRECIO_UNITARIO) AS SUBTOTAL,
        SUM(CANTIDAD * PRECIO_UNITARIO) AS TOTAL
    FROM COTIZACION_SERVICIOS
    JOIN SERVICIOS ON COTIZACION_SERVICIOS.COD_SERVICIO = SERVICIOS.COD_SERVICIO
    WHERE ID_COTIZACION = @IDCOT;
END;
GO
*/
/*
CREATE PROCEDURE sp_obtn_coti
    @IDCOT INT
AS
BEGIN
    SELECT 
        COTIZACION_SERVICIOS.COD_SERVICIO,
        SERVICIOS.CONCEPTO,
        SERVICIOS.PRECIO_UNITARIO,
        SERVICIOS.TIPO_SERVICIO,
        SERVICIOS.PROVEEDOR,
        COTIZACION_SERVICIOS.CANTIDAD
    FROM COTIZACION_SERVICIOS
    JOIN SERVICIOS ON COTIZACION_SERVICIOS.COD_SERVICIO = SERVICIOS.COD_SERVICIO
    WHERE ID_COTIZACION = @IDCOT;
END;
GO
*/
/*CREATE PROCEDURE sp_obtn_proy_activ
AS
BEGIN
    SELECT ID_PROYECTO, CLIENTE, NOMBRE
    FROM PROYECTO
    WHERE ESTADO = 'Activo';
END;
GO
*/